---

- name: Simplify variables 1/2
  set_fact:
    _server_config: "{{ hostvars[borgbackup_repository_server] }}"
    _install_method: "{{ hostvars[borgbackup_repository_server].borgbackup_install_method|default('system') }}"

- name: Simplify variables 2/2
  set_fact:
    _user: "{{ _server_config.borgbackup_user|default('borg') }}"
    _repo_path: "{{ _server_config.borgbackup_repository_storage.rstrip('/') }}/{{ inventory_hostname }}"
    _borg_executable: "{{ _server_config.borgbackup_executable|default((_install_method == 'system')|ternary('/usr', '/usr/local') + '/bin/borg') }}"
    borgbackup_repository: "ssh://{{ _server_config.borgbackup_user|default('borg') }}@{{ _server_config.ansible_facts.fqdn }}/./"

- name: Get client public keys (id_ssh_ed25519.pub)
  slurp:
    src: "{{ borgbackup_home }}/config/id_ssh_ed25519.pub"
  register: slurped_key_b64

- name: Regather facts to get SSH host keys
  setup:
    gather_subset: "!all"
  delegate_to: "{{ item }}"
  delegate_facts: yes
  # Nice trick to only run once per repository_server (one might call it a slight hack)
  run_once: yes
  loop: "{{ ansible_play_hosts|map('extract', hostvars, 'borgbackup_repository_server')|select('defined')|unique|list }}"

- name: Create borg repository folder
  file:
    path: "{{ _repo_path }}"
    state: directory
    owner: "{{ _user }}"
    group: "{{ _user }}"
    mode: 0700
  delegate_to: "{{ borgbackup_repository_server }}"

- name: Configure SSH to allow the clients to access
  authorized_key:
    user: "{{ _user }}"
    state: present
    key: "{{ slurped_key_b64.content|b64decode }}"
    key_options: >-
      command="
      cd {{ _repo_path }};
      {{ _borg_executable }} serve
      {% if borgbackup_append_only %}--append-only{% endif %} --restrict-to-repository {{ _repo_path }}
      ",restrict'
  delegate_to: "{{ borgbackup_repository_server }}"
  throttle: 1
